MiniStringFuck is a derivative of the famous Brainfuck which contains a memory cell as its only form of data storage as opposed to a memory tape of 30,000 cells in Brainfuck. The memory cell in MiniStringFuck initially starts at 0. MiniStringFuck contains only 2 commands as opposed to 8:

    + - Increment the memory cell. If it reaches 256, wrap to 0.
    . - Output the ASCII value of the memory cell

_____

Describe(example_tests)
{
    It(should_return_hello_world)
    {
      std::string code
      Assert::That(my_first_interpreter(code), Equals("Hello, World!"));
    }
    It(should_return_the_alphabet_a_z)
    {
      std::string code = "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.";
      Assert::That(my_first_interpreter(code), Equals("ABCDEFGHIJKLMNOPQRSTUVWXYZ"));
    }
};
