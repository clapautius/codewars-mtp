#include <string>
#include <vector>

static int g_cell = 0;

void inc_cell()
{
    g_cell++;
    if (g_cell == 256) {
        g_cell = 0;
    }
}

std::string my_first_interpreter(const std::string& code)
{
    std::string result = "";
    g_cell = 0;
    // Your code here.
    for (unsigned i = 0; i < code.length(); i++) {
        if (code[i] == '+') {
            inc_cell();
        } else if (code[i] == '.') {
            result += static_cast<char>(g_cell);
        }
    }
    return result;
}

//------- CUT HERE ------

#include <iostream>

int main()
{
    // test 1
    std::string code
    std::cout << my_first_interpreter(code) << std::endl;

    // test 2
    code = "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.";
    std::cout << my_first_interpreter(code) << std::endl;
}
